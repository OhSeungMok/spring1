package com.office.library.admin.member;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


@Controller
@RequestMapping("/admin/member") //이게 없으면 경로를 못찾음
public class AdminMemberController {
	@Autowired //AdminMemberService 자동 주입
	AdminMemberService adminMemberService; //AdminMemberService의 기본 생성자
	
	
	//@RequestMapping("/createAccountForm")
	//@RequestMapping(value="/createAccountForm", method=RequestMethod.GET) 모두 동일한 매핑임
	@GetMapping("/createAccountForm") //모두 동일한 매핑임
	public String createAccountForm() {
		System.out.println("AdminMemberController의 createAccountForm()메서드");
		String nextPage = "admin/member/create_account_form"; // admin폴더 아래 member폴더 아래 create_account_form.jsp파일로
		return nextPage;
	}
	
	//@RequestMapping(value="/createAccountConfirm", method=RequestMethod.POST)
	@PostMapping("/createAccountConfirm")
	public String createAccountConfirm(AdminMemberVo adminMemberVo) { //객체 AdminMemberVo타입의 adminMemberVo를 가져옴
		System.out.println("AdminMemeberController의 createAccountConfirm()메서드");
		String nextPage = "admin/member/create_account_ok";
		
		int result = adminMemberService.createAccountConfirm(adminMemberVo);
		adminMemberService.createAccountConfirm(adminMemberVo);
		
		return nextPage;
	}
	
}
